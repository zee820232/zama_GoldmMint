{"version":3,"file":"index-BTDevQPs.js","sources":["../../node_modules/@safe-global/safe-apps-provider/dist/utils.js","../../node_modules/@safe-global/safe-apps-provider/dist/provider.js","../../node_modules/@safe-global/safe-apps-provider/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.numberToHex = exports.getLowerCase = void 0;\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nexports.getLowerCase = getLowerCase;\nfunction numberToHex(value) {\n    return `0x${value.toString(16)}`;\n}\nexports.numberToHex = numberToHex;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafeAppProvider = void 0;\nconst safe_apps_sdk_1 = require(\"@safe-global/safe-apps-sdk\");\nconst events_1 = require(\"events\");\nconst utils_1 = require(\"./utils\");\n// The API is based on Ethereum JavaScript API Provider Standard. Link: https://eips.ethereum.org/EIPS/eip-1193\nclass SafeAppProvider extends events_1.EventEmitter {\n    constructor(safe, sdk) {\n        super();\n        this.submittedTxs = new Map();\n        this.safe = safe;\n        this.sdk = sdk;\n    }\n    async connect() {\n        this.emit('connect', { chainId: this.chainId });\n        return;\n    }\n    async disconnect() {\n        return;\n    }\n    get chainId() {\n        return this.safe.chainId;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async request(request) {\n        const { method, params = [] } = request;\n        switch (method) {\n            case 'eth_accounts':\n                return [this.safe.safeAddress];\n            case 'net_version':\n            case 'eth_chainId':\n                return (0, utils_1.numberToHex)(this.chainId);\n            case 'personal_sign': {\n                const [message, address] = params;\n                if (this.safe.safeAddress.toLowerCase() !== address.toLowerCase()) {\n                    throw new Error('The address or message hash is invalid');\n                }\n                const response = await this.sdk.txs.signMessage(message);\n                const signature = 'signature' in response ? response.signature : undefined;\n                return signature || '0x';\n            }\n            case 'eth_sign': {\n                const [address, messageHash] = params;\n                if (this.safe.safeAddress.toLowerCase() !== address.toLowerCase() || !messageHash.startsWith('0x')) {\n                    throw new Error('The address or message hash is invalid');\n                }\n                const response = await this.sdk.txs.signMessage(messageHash);\n                const signature = 'signature' in response ? response.signature : undefined;\n                return signature || '0x';\n            }\n            case 'eth_signTypedData':\n            case 'eth_signTypedData_v4': {\n                const [address, typedData] = params;\n                const parsedTypedData = typeof typedData === 'string' ? JSON.parse(typedData) : typedData;\n                if (this.safe.safeAddress.toLowerCase() !== address.toLowerCase()) {\n                    throw new Error('The address is invalid');\n                }\n                const response = await this.sdk.txs.signTypedMessage(parsedTypedData);\n                const signature = 'signature' in response ? response.signature : undefined;\n                return signature || '0x';\n            }\n            case 'eth_sendTransaction':\n                // `value` or `data` can be explicitly set as `undefined` for example in Viem. The spread will overwrite the fallback value.\n                const tx = {\n                    ...params[0],\n                    value: params[0].value || '0',\n                    data: params[0].data || '0x',\n                };\n                // Some ethereum libraries might pass the gas as a hex-encoded string\n                // We need to convert it to a number because the SDK expects a number and our backend only supports\n                // Decimal numbers\n                if (typeof tx.gas === 'string' && tx.gas.startsWith('0x')) {\n                    tx.gas = parseInt(tx.gas, 16);\n                }\n                const resp = await this.sdk.txs.send({\n                    txs: [tx],\n                    params: { safeTxGas: tx.gas },\n                });\n                // Store fake transaction\n                this.submittedTxs.set(resp.safeTxHash, {\n                    from: this.safe.safeAddress,\n                    hash: resp.safeTxHash,\n                    gas: 0,\n                    gasPrice: '0x00',\n                    nonce: 0,\n                    input: tx.data,\n                    value: tx.value,\n                    to: tx.to,\n                    blockHash: null,\n                    blockNumber: null,\n                    transactionIndex: null,\n                });\n                return resp.safeTxHash;\n            case 'eth_blockNumber':\n                const block = await this.sdk.eth.getBlockByNumber(['latest']);\n                return block.number;\n            case 'eth_getBalance':\n                return this.sdk.eth.getBalance([(0, utils_1.getLowerCase)(params[0]), params[1]]);\n            case 'eth_getCode':\n                return this.sdk.eth.getCode([(0, utils_1.getLowerCase)(params[0]), params[1]]);\n            case 'eth_getTransactionCount':\n                return this.sdk.eth.getTransactionCount([(0, utils_1.getLowerCase)(params[0]), params[1]]);\n            case 'eth_getStorageAt':\n                return this.sdk.eth.getStorageAt([(0, utils_1.getLowerCase)(params[0]), params[1], params[2]]);\n            case 'eth_getBlockByNumber':\n                return this.sdk.eth.getBlockByNumber([params[0], params[1]]);\n            case 'eth_getBlockByHash':\n                return this.sdk.eth.getBlockByHash([params[0], params[1]]);\n            case 'eth_getTransactionByHash':\n                let txHash = params[0];\n                try {\n                    const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n                    txHash = resp.txHash || txHash;\n                }\n                catch (e) { }\n                // Use fake transaction if we don't have a real tx hash\n                if (this.submittedTxs.has(txHash)) {\n                    return this.submittedTxs.get(txHash);\n                }\n                return this.sdk.eth.getTransactionByHash([txHash]).then((tx) => {\n                    // We set the tx hash to the one requested, as some provider assert this\n                    if (tx) {\n                        tx.hash = params[0];\n                    }\n                    return tx;\n                });\n            case 'eth_getTransactionReceipt': {\n                let txHash = params[0];\n                try {\n                    const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n                    txHash = resp.txHash || txHash;\n                }\n                catch (e) { }\n                return this.sdk.eth.getTransactionReceipt([txHash]).then((tx) => {\n                    // We set the tx hash to the one requested, as some provider assert this\n                    if (tx) {\n                        tx.transactionHash = params[0];\n                    }\n                    return tx;\n                });\n            }\n            case 'eth_estimateGas': {\n                return this.sdk.eth.getEstimateGas(params[0]);\n            }\n            case 'eth_call': {\n                return this.sdk.eth.call([params[0], params[1]]);\n            }\n            case 'eth_getLogs':\n                return this.sdk.eth.getPastLogs([params[0]]);\n            case 'eth_gasPrice':\n                return this.sdk.eth.getGasPrice();\n            case 'wallet_getPermissions':\n                return this.sdk.wallet.getPermissions();\n            case 'wallet_requestPermissions':\n                return this.sdk.wallet.requestPermissions(params[0]);\n            case 'safe_setSettings':\n                return this.sdk.eth.setSafeSettings([params[0]]);\n            case 'wallet_sendCalls': {\n                const { from, calls, chainId } = params[0];\n                if (chainId !== (0, utils_1.numberToHex)(this.chainId)) {\n                    throw new Error(`Safe is not on chain ${chainId}`);\n                }\n                if (from !== this.safe.safeAddress) {\n                    throw Error('Invalid from address');\n                }\n                const txs = calls.map((call, i) => {\n                    if (!call.to) {\n                        throw new Error(`Invalid call #${i}: missing \"to\" field`);\n                    }\n                    return {\n                        to: call.to,\n                        data: call.data ?? '0x',\n                        value: call.value ?? (0, utils_1.numberToHex)(0),\n                    };\n                });\n                const { safeTxHash } = await this.sdk.txs.send({ txs });\n                const result = {\n                    id: safeTxHash,\n                };\n                return result;\n            }\n            case 'wallet_getCallsStatus': {\n                const safeTxHash = params[0];\n                const CallStatus = {\n                    [safe_apps_sdk_1.TransactionStatus.AWAITING_CONFIRMATIONS]: 100,\n                    [safe_apps_sdk_1.TransactionStatus.AWAITING_EXECUTION]: 100,\n                    [safe_apps_sdk_1.TransactionStatus.SUCCESS]: 200,\n                    [safe_apps_sdk_1.TransactionStatus.CANCELLED]: 400,\n                    [safe_apps_sdk_1.TransactionStatus.FAILED]: 500,\n                };\n                const tx = await this.sdk.txs.getBySafeTxHash(safeTxHash);\n                const result = {\n                    version: '1.0',\n                    id: safeTxHash,\n                    chainId: (0, utils_1.numberToHex)(this.chainId),\n                    status: CallStatus[tx.txStatus],\n                };\n                // Transaction is queued\n                if (!tx.txHash) {\n                    return result;\n                }\n                // If transaction is executing, receipt is null\n                const receipt = await this.sdk.eth.getTransactionReceipt([tx.txHash]);\n                if (!receipt) {\n                    return result;\n                }\n                const calls = tx.txData?.dataDecoded?.method !== 'multiSend'\n                    ? 1\n                    : // Number of batched transactions\n                        tx.txData.dataDecoded.parameters?.[0].valueDecoded?.length ?? 1;\n                // Typed as number; is hex\n                const blockNumber = Number(receipt.blockNumber);\n                const gasUsed = Number(receipt.gasUsed);\n                result.receipts = Array(calls).fill({\n                    logs: receipt.logs,\n                    status: (0, utils_1.numberToHex)(tx.txStatus === safe_apps_sdk_1.TransactionStatus.SUCCESS ? 1 : 0),\n                    blockHash: receipt.blockHash,\n                    blockNumber: (0, utils_1.numberToHex)(blockNumber),\n                    gasUsed: (0, utils_1.numberToHex)(gasUsed),\n                    transactionHash: tx.txHash,\n                });\n                return result;\n            }\n            case 'wallet_showCallsStatus': {\n                // Cannot open transaction details page via SDK\n                throw new Error(`\"${request.method}\" not supported`);\n            }\n            case 'wallet_getCapabilities': {\n                return {\n                    [(0, utils_1.numberToHex)(this.chainId)]: {\n                        atomicBatch: {\n                            supported: true,\n                        },\n                    },\n                };\n            }\n            default:\n                throw Error(`\"${request.method}\" not implemented`);\n        }\n    }\n    // this method is needed for ethers v4\n    // https://github.com/ethers-io/ethers.js/blob/427e16826eb15d52d25c4f01027f8db22b74b76c/src.ts/providers/web3-provider.ts#L41-L55\n    send(request, callback) {\n        if (!request)\n            callback('Undefined request');\n        this.request(request)\n            .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n            .catch((error) => callback(error, null));\n    }\n}\nexports.SafeAppProvider = SafeAppProvider;\n//# sourceMappingURL=provider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafeAppProvider = void 0;\nvar provider_1 = require(\"./provider\");\nObject.defineProperty(exports, \"SafeAppProvider\", { enumerable: true, get: function () { return provider_1.SafeAppProvider; } });\n//# sourceMappingURL=index.js.map"],"names":["utils","getLowerCase","value","numberToHex","provider","safe_apps_sdk_1","require$$0","events_1","require$$1","utils_1","require$$2","SafeAppProvider","safe","sdk","request","method","params","message","address","response","messageHash","typedData","parsedTypedData","tx","resp","txHash","from","calls","chainId","txs","call","i","safeTxHash","CallStatus","result","receipt","_b","_a","_d","_c","blockNumber","gasUsed","callback","error","exports","provider_1"],"mappings":"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","x_google_ignoreList":[0,1,2]}